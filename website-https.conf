user ec2-user;
load_module /usr/lib64/nginx/modules/ngx_stream_module.so;
events { }

stream {
  upstream worlds {
    server 172.31.20.93:7777;
  }

  server {
    listen 7776;
    listen 7776 udp;
    proxy_pass worlds;
    # proxy_bind 172.31.20.93;
  }
}

http {
  upstream evb {
    server 127.0.0.1:8000;
  }

  upstream worlds {
    server 127.0.0.1:7777;
  }

  server {
    listen 80 default_server;
    listen [::]:80 default_server;

    location / {
      root /home/ec2-user/Eraverse/eraverse-website/;
      index index.html;
    }

    location /evb/ {
	proxy_pass http://evb/;
    }
  }

  #server {
  #  listen 7776;

  #  location / {
  #    proxy_pass http://worlds/;
  #  }
  #}

  default_type  application/octet-stream;
  include  /etc/nginx/mime.types;

  server {

    location / {
      root /home/ec2-user/Eraverse/eraverse-website/;
      index index.html;
    }

    location /evb/ {
        proxy_pass http://evb/;
    }

    server_name eraverse.org www.eraverse.org; # managed by Certbot

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/eraverse.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/eraverse.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot




}

  server {
    if ($host = www.eraverse.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = eraverse.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80 ;
    listen [::]:80 ;
    server_name eraverse.org www.eraverse.org;
    return 404; # managed by Certbot




}}
